/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface Paths {
  '/networks/{chainId}/nfts/{tokenAddress}': {
    get: Operations['NftsController_getCollectionMetadata'];
  };
  '/networks/{chainId}/accounts/{address}/assets/nfts': {
    get: Operations['NftsController_getNftsForAddress'];
  };
  '/networks/{chainId}/nfts/{tokenAddress}/tokens/{tokenId}': {
    get: Operations['NftsController_getNftMetadata'];
  };
  '/networks/{chainId}/nfts/{address}/tokens': {
    get: Operations['NftsController_getNftsForCollection'];
  };
  '/networks/{chainId}/accounts/{address}/assets/transfers': {
    get: Operations['NftsController_getTransferForAddress'];
  };
}

export interface Components {
  schemas: {
    CollectionModel: {
      /** @example 0xa9cb55d05d3351dcd02dd5dc4614e764ce3e1d6e */
      contract: string;
      /** @example My Crypto NFT Project */
      name: string;
      /** @example CNSYS */
      symbol: string;
      /** @example ERC-721 */
      tokenType: string;
    };
    AssetsModel: {
      /** @example 0x8e04b34166612e73e8f8b7d7a5ddb6ea2895b4b5 */
      contract: string;
      /** @example 3545 */
      tokenId: string;
      /** @example 1 */
      supply: string;
      /** @example ERC721 */
      type: string;
      metadata?: { [key: string]: unknown };
    };
    NftModel: {
      /** @example 1 */
      pageNumber: number;
      /**
       * @example ETHEREUM
       * @enum {string}
       */
      network: 'ETHEREUM' | 'GOERLI' | 'BINANCE' | 'POLYGON';
      /** @example 1 */
      total: number;
      /** @example 0x0a267cf51ef038fc00e71801f5a524aec06e4f07 */
      account: string;
      /** @example NFT */
      type: string;
      cursor: string;
      assets: Components['schemas']['AssetsModel'][];
    };
    MetadataModel: {
      /** @example 0xa9cb55d05d3351dcd02dd5dc4614e764ce3e1d6e */
      contract: string;
      /** @example 1 */
      tokenId: number;
      /**
       * @example {
       *   "name": "Washington #7421",
       *   "description": "WeMint Cash First Edition: Washington #7421",
       *   "attributes": []
       * }
       */
      metadata: { [key: string]: unknown };
    };
    TransfersResultsModel: {
      /** @example 0x082903f4e94c5e10a2b116a4284940a36afaed63 */
      tokenAddress: string;
      /** @example 3784 */
      tokenId: string;
      /** @example 0x4f3a17060f14a28a1b706be652879d9aea4a83c2 */
      fromAddress: string;
      /** @example 0x0a267cf51ef038fc00e71801f5a524aec06e4f07 */
      toAddress: string;
      /** @example ERC1155 */
      contractType: string;
      /** @example 0 */
      price: string;
      /** @example 1 */
      quantity: string;
      /** @example 14221791 */
      blockNumber: string;
      /** @example 2022-02-17T05:37:06.000Z */
      blockTimestamp: string;
      /** @example 0x75cf7d327e259b10881cc3b66a4aad56eb2ab4163cc77a6c535123938aa87b5f */
      blockHash: string;
      /** @example 0x97af3d5fe2951a3667dc9b465eb7253682e08d7ec23759722db1732fa9583468 */
      transactionHash: string;
      /** @example */
      transactionType: string;
    };
    TransfersModel: {
      /** @example 1200 */
      total: number;
      /** @example 1 */
      pageNumber: number;
      /** @example 100 */
      pageSize: number;
      /**
       * @example ETHEREUM
       * @enum {string}
       */
      network: 'ETHEREUM' | 'GOERLI' | 'BINANCE' | 'POLYGON';
      cursor: string;

      /** @example 0x0a267cf51ef038fc00e71801f5a524aec06e4f07 */
      account: string;
      transfers: Components['schemas']['TransfersResultsModel'][];
    };
    TradeModel: {
      /** @example 0x4cd5a150a0332cdd3525b9bdc387af000866957fead36a8dc242b9d2f683d04a */
      transactionHash: string;
      /** @example 2023-01-21T01:15:11.000Z */
      blockTimestamp: string;
      /** @example 0x9542de2282024ed349c21ff23839921a26b04a6efdf98e2ba870c4fd9871cce0 */
      blockHash: string;
      /** @example 16451830 */
      blockNumber: string;
      /** @example ["655"] */
      tokenIds: string[];
      /** @example 0xb3dbf4147183492a7bc544e8abed20ad6831fecb */
      sellerAddress: string;
      /** @example 0xcd9ab8f11df0a72b65c7adcfbc61b79aab9fe4c6 */
      buyerAddress: string;
      /** @example 0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d */
      tokenAddress: string;
      /** @example 0x00000000006c3852cbef3e08e8df289169ede581 */
      marketplaceAddress: string;
      /** @example 66290000000000000000 */
      price: string;
    };
  };
}

export interface Operations {
  NftsController_getCollectionMetadata: {
    parameters: {
      path: {
        chainId: string;
        tokenAddress: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': Components['schemas']['CollectionModel'];
        };
      };
    };
  };
  NftsController_getNftsForAddress: {
    parameters: {
      path: {
        chainId: string;
        address: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': Components['schemas']['NftModel'];
        };
      };
    };
  };
  NftsController_getNftMetadata: {
    parameters: {
      path: {
        chainId: string;
        tokenAddress: string;
        tokenId: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': Components['schemas']['MetadataModel'];
        };
      };
    };
  };
  NftsController_getNftsForCollection: {
    parameters: {
      path: {
        chainId: string;
        address: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': Components['schemas']['NftModel'];
        };
      };
    };
  };
  NftsController_getTransferForAddress: {
    parameters: {
      path: {
        chainId: string;
        address: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': Components['schemas']['TransfersModel'];
        };
      };
    };
  };
}

export interface External {}
